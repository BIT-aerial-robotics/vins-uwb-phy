%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1        
num_of_cam: 2
imu_topic: "/imu_3"
image0_topic: "/camera6/image"
image1_topic: "/camera5/image"
output_path: "/home/f404/bag/"

cam0_calib: "cam0_pinhole.yaml"
cam1_calib: "cam1_pinhole.yaml"
image_width: 640
image_height: 480
# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

KINEMATIC: 1
agent_number: 2
agent_all: 3
scale : 1
posinfo: 40
veloinfo: 12
length: 0.95
body_world_T: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data : [-0.691592716271,-0.722233879473,0.00881692362771,-3.12548967114,
          0.722095412181,-0.691075440311,0.031511133046,-4.72470179119,
          -0.0166652484882,0.0281595301972,0.999464511802,-0.829171605851,
          0.0,0.0,0.0,1.0]
# 右下前转前右下

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [0.0, 0.0, 1.0, 0.198,
#           -1.0, 0.0, 0.0, -0.06,
#           0.0, -1.0, 0.0, 0.0,
#           0.0, 0.0, 0.0, 1.0]
# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [0.0, 0.0, 1.0, 0.198,
#           -1.0, 0.0, 0.0, 0.06,
#           0.0, -1.0, 0.0, 0.0,
#           0.0, 0.0, 0.0, 1.0]

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.0, 0.0, 1.0, 0.198,
          -1.0, 0.0, 0.0, 0.06,
          0.0, -1.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 1.0]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.0, 0.0, 1.0, 0.198,
          -1.0, 0.0, 0.0, -0.06,
          0.0, -1.0, 0.0, 0.0,
          0.0, 0.0, 0.0, 1.0]



#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 100            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.06  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.    
g_norm: 9.805      # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.00                            # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
